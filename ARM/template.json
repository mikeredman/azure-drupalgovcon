{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccounts_dgc24storage_name": {
            "defaultValue": "dgc24storage",
            "type": "String"
        },
        "registries_dgc24acr_name": {
            "defaultValue": "dgc24acr",
            "type": "String"
        },
        "managedClusters_DGC_24_Drupal_name": {
            "defaultValue": "DGC-24-Drupal",
            "type": "String"
        },
        "publicIPAddresses_50b912b1_138c_4663_89fd_d26095115438_externalid": {
            "defaultValue": "/subscriptions/2d3cabc6-65a5-4330-b839-9edf0fb2db32/resourceGroups/MC_DGC24_DGC-24-Drupal_eastus/providers/Microsoft.Network/publicIPAddresses/50b912b1-138c-4663-89fd-d26095115438",
            "type": "String"
        },
        "userAssignedIdentities_DGC_24_Drupal_agentpool_externalid": {
            "defaultValue": "/subscriptions/2d3cabc6-65a5-4330-b839-9edf0fb2db32/resourceGroups/MC_DGC24_DGC-24-Drupal_eastus/providers/Microsoft.ManagedIdentity/userAssignedIdentities/DGC-24-Drupal-agentpool",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2023-11-01-preview",
            "name": "[parameters('registries_dgc24acr_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "properties": {
                "adminUserEnabled": false,
                "policies": {
                    "quarantinePolicy": {
                        "status": "disabled"
                    },
                    "trustPolicy": {
                        "type": "Notary",
                        "status": "disabled"
                    },
                    "retentionPolicy": {
                        "days": 7,
                        "status": "disabled"
                    },
                    "exportPolicy": {
                        "status": "enabled"
                    },
                    "azureADAuthenticationAsArmPolicy": {
                        "status": "enabled"
                    },
                    "softDeletePolicy": {
                        "retentionDays": 7,
                        "status": "disabled"
                    }
                },
                "encryption": {
                    "status": "disabled"
                },
                "dataEndpointEnabled": false,
                "publicNetworkAccess": "Enabled",
                "networkRuleBypassOptions": "AzureServices",
                "zoneRedundancy": "Disabled",
                "anonymousPullEnabled": false,
                "metadataSearch": "Disabled"
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2024-05-01",
            "name": "[parameters('managedClusters_DGC_24_Drupal_name')]",
            "location": "eastus",
            "sku": {
                "name": "Base",
                "tier": "Standard"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "kubernetesVersion": "1.29.7",
                "dnsPrefix": "[concat(parameters('managedClusters_DGC_24_Drupal_name'), '-dns')]",
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "count": 2,
                        "vmSize": "Standard_D4ds_v4",
                        "osDiskSizeGB": 128,
                        "osDiskType": "Ephemeral",
                        "kubeletDiskType": "OS",
                        "maxPods": 110,
                        "type": "VirtualMachineScaleSets",
                        "maxCount": 5,
                        "minCount": 2,
                        "enableAutoScaling": true,
                        "powerState": {
                            "code": "Running"
                        },
                        "orchestratorVersion": "1.29.7",
                        "enableNodePublicIP": false,
                        "mode": "System",
                        "osType": "Linux",
                        "osSKU": "Ubuntu",
                        "upgradeSettings": {
                            "maxSurge": "10%"
                        },
                        "enableFIPS": false
                    }
                ],
                "windowsProfile": {
                    "adminUsername": "azureuser",
                    "enableCSIProxy": true
                },
                "servicePrincipalProfile": {
                    "clientId": "msi"
                },
                "addonProfiles": {
                    "azureKeyvaultSecretsProvider": {
                        "enabled": false
                    },
                    "azurepolicy": {
                        "enabled": false
                    }
                },
                "nodeResourceGroup": "[concat('MC_DGC24_', parameters('managedClusters_DGC_24_Drupal_name'), '_eastus')]",
                "enableRBAC": true,
                "supportPlan": "KubernetesOfficial",
                "networkProfile": {
                    "networkPlugin": "azure",
                    "networkPluginMode": "overlay",
                    "networkPolicy": "none",
                    "networkDataplane": "azure",
                    "loadBalancerSku": "Standard",
                    "loadBalancerProfile": {
                        "managedOutboundIPs": {
                            "count": 1
                        },
                        "effectiveOutboundIPs": [
                            {
                                "id": "[parameters('publicIPAddresses_50b912b1_138c_4663_89fd_d26095115438_externalid')]"
                            }
                        ],
                        "backendPoolType": "nodeIPConfiguration"
                    },
                    "podCidr": "10.244.0.0/16",
                    "serviceCidr": "10.0.0.0/16",
                    "dnsServiceIP": "10.0.0.10",
                    "outboundType": "loadBalancer",
                    "podCidrs": [
                        "10.244.0.0/16"
                    ],
                    "serviceCidrs": [
                        "10.0.0.0/16"
                    ],
                    "ipFamilies": [
                        "IPv4"
                    ]
                },
                "identityProfile": {
                    "kubeletidentity": {
                        "resourceId": "[parameters('userAssignedIdentities_DGC_24_Drupal_agentpool_externalid')]",
                        "clientId": "8700f053-ee98-4ea2-b010-20916af9db64",
                        "objectId": "cc71839b-8ccd-4da7-adf4-c76dd35223b7"
                    }
                },
                "autoScalerProfile": {
                    "balance-similar-node-groups": "false",
                    "daemonset-eviction-for-empty-nodes": false,
                    "daemonset-eviction-for-occupied-nodes": true,
                    "expander": "random",
                    "ignore-daemonsets-utilization": false,
                    "max-empty-bulk-delete": "10",
                    "max-graceful-termination-sec": "600",
                    "max-node-provision-time": "15m",
                    "max-total-unready-percentage": "45",
                    "new-pod-scale-up-delay": "0s",
                    "ok-total-unready-count": "3",
                    "scale-down-delay-after-add": "10m",
                    "scale-down-delay-after-delete": "10s",
                    "scale-down-delay-after-failure": "3m",
                    "scale-down-unneeded-time": "10m",
                    "scale-down-unready-time": "20m",
                    "scale-down-utilization-threshold": "0.5",
                    "scan-interval": "10s",
                    "skip-nodes-with-local-storage": "false",
                    "skip-nodes-with-system-pods": "true"
                },
                "autoUpgradeProfile": {
                    "upgradeChannel": "patch",
                    "nodeOSUpgradeChannel": "NodeImage"
                },
                "disableLocalAccounts": false,
                "securityProfile": {},
                "storageProfile": {
                    "diskCSIDriver": {
                        "enabled": true
                    },
                    "fileCSIDriver": {
                        "enabled": true
                    },
                    "snapshotController": {
                        "enabled": true
                    }
                },
                "oidcIssuerProfile": {
                    "enabled": false
                },
                "ingressProfile": {
                    "webAppRouting": {
                        "enabled": true
                    }
                },
                "workloadAutoScalerProfile": {},
                "azureMonitorProfile": {
                    "metrics": {
                        "enabled": true,
                        "kubeStateMetrics": {}
                    }
                },
                "metricsProfile": {
                    "costAnalysis": {
                        "enabled": false
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-05-01",
            "name": "[parameters('storageAccounts_dgc24storage_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "largeFileSharesState": "Enabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
            "apiVersion": "2023-11-01-preview",
            "name": "[concat(parameters('registries_dgc24acr_name'), '/_repositories_admin')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_dgc24acr_name'))]"
            ],
            "properties": {
                "description": "Can perform all read, write and delete operations on the registry",
                "actions": [
                    "repositories/*/metadata/read",
                    "repositories/*/metadata/write",
                    "repositories/*/content/read",
                    "repositories/*/content/write",
                    "repositories/*/content/delete"
                ]
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
            "apiVersion": "2023-11-01-preview",
            "name": "[concat(parameters('registries_dgc24acr_name'), '/_repositories_pull')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_dgc24acr_name'))]"
            ],
            "properties": {
                "description": "Can pull any repository of the registry",
                "actions": [
                    "repositories/*/content/read"
                ]
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
            "apiVersion": "2023-11-01-preview",
            "name": "[concat(parameters('registries_dgc24acr_name'), '/_repositories_pull_metadata_read')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_dgc24acr_name'))]"
            ],
            "properties": {
                "description": "Can perform all read operations on the registry",
                "actions": [
                    "repositories/*/content/read",
                    "repositories/*/metadata/read"
                ]
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
            "apiVersion": "2023-11-01-preview",
            "name": "[concat(parameters('registries_dgc24acr_name'), '/_repositories_push')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_dgc24acr_name'))]"
            ],
            "properties": {
                "description": "Can push to any repository of the registry",
                "actions": [
                    "repositories/*/content/read",
                    "repositories/*/content/write"
                ]
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
            "apiVersion": "2023-11-01-preview",
            "name": "[concat(parameters('registries_dgc24acr_name'), '/_repositories_push_metadata_write')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_dgc24acr_name'))]"
            ],
            "properties": {
                "description": "Can perform all read and write operations on the registry",
                "actions": [
                    "repositories/*/metadata/read",
                    "repositories/*/metadata/write",
                    "repositories/*/content/read",
                    "repositories/*/content/write"
                ]
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters/agentPools",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('managedClusters_DGC_24_Drupal_name'), '/agentpool')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_DGC_24_Drupal_name'))]"
            ],
            "properties": {
                "count": 2,
                "vmSize": "Standard_D4ds_v4",
                "osDiskSizeGB": 128,
                "osDiskType": "Ephemeral",
                "kubeletDiskType": "OS",
                "maxPods": 110,
                "type": "VirtualMachineScaleSets",
                "maxCount": 5,
                "minCount": 2,
                "enableAutoScaling": true,
                "powerState": {
                    "code": "Running"
                },
                "orchestratorVersion": "1.29.7",
                "enableNodePublicIP": false,
                "mode": "System",
                "osType": "Linux",
                "osSKU": "Ubuntu",
                "upgradeSettings": {
                    "maxSurge": "10%"
                },
                "enableFIPS": false
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters/maintenanceConfigurations",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('managedClusters_DGC_24_Drupal_name'), '/aksManagedAutoUpgradeSchedule')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_DGC_24_Drupal_name'))]"
            ],
            "properties": {
                "maintenanceWindow": {
                    "schedule": {
                        "weekly": {
                            "intervalWeeks": 1,
                            "dayOfWeek": "Sunday"
                        }
                    },
                    "durationHours": 4,
                    "utcOffset": "+00:00",
                    "startDate": "2024-08-12",
                    "startTime": "00:00"
                }
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters/maintenanceConfigurations",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('managedClusters_DGC_24_Drupal_name'), '/aksManagedNodeOSUpgradeSchedule')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_DGC_24_Drupal_name'))]"
            ],
            "properties": {
                "maintenanceWindow": {
                    "schedule": {
                        "weekly": {
                            "intervalWeeks": 1,
                            "dayOfWeek": "Sunday"
                        }
                    },
                    "durationHours": 4,
                    "utcOffset": "+00:00",
                    "startDate": "2024-08-12",
                    "startTime": "00:00"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_dgc24storage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_dgc24storage_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_dgc24storage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_dgc24storage_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_dgc24storage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_dgc24storage_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_dgc24storage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_dgc24storage_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        }
    ]
}